CREATE OR REPLACE FUNCTION Fun_GetTarget_Default
(PAR_MFGTYPE IN VARCHAR2,PAR_SHIFT IN VARCHAR2,PAR_LINE IN VARCHAR2,PAR_STAGE IN VARCHAR2,
PAR_PERIODNO IN VARCHAR2,PAR_STARTTIME IN DATE,PAR_ENDTIME IN DATE,PAR_BREAKTIMEPER IN NUMBER )
--version v3.0.0.0 2014/07/15 by oscar
RETURN NUMBER IS
    VAR_TARGET  NUMBER :=0;
    VAR_Flag  NUMBER :=0;
    VAR_PER NUMBER(8,4);
    VAR_PERIODSTARTTIME V_PPFPRODPERIOD.STARTTIME%TYPE;
    VAR_PERIODENDTIME V_PPFPRODPERIOD.ENDTIME%TYPE;
    VAR_BREAKTIME V_PPFPRODPERIOD.BREAKTIME%TYPE;
BEGIN
  SELECT COUNT(*) INTO VAR_Flag FROM KBPDMTMODEL WHERE MFGTYPE=PAR_MFGTYPE AND LINE=PAR_LINE;
     IF VAR_Flag > 0 THEN
       -- SELECT COUNT(*) INTO VAR_Flag FROM PPFSTANDARDPROD A RIGHT JOIN KBPDMTMODEL B USING(LINE,MODELFAMILY)
        --  WHERE A.MATERIALGROUP='S' AND LINE=PAR_LINE;
        -- IF VAR_Flag > 0 THEN

       -- SELECT NVL(MAX(TARGET),0) INTO VAR_TARGET FROM PPFSTANDARDPROD A RIGHT JOIN KBPDMTMODEL B USING(LINE,MODELFAMILY)
         -- WHERE A.MATERIALGROUP='S' AND LINE=PAR_LINE;
            SELECT NVL(ROUND((60*60)/ MAX(CYCLETIME)),0) INTO VAR_TARGET FROM PPFSTDTIMEHEAD A RIGHT JOIN KBPDMTMODEL B USING(LINE,MODELFAMILY,MATERIALGROUP)
          WHERE LINE=PAR_LINE AND A.UPN='*';
        -- ELSE
          --  VAR_TARGET :=0;
        -- END IF;
     ELSE
        -- SELECT COUNT(*) INTO VAR_Flag FROM PPFSTANDARDPROD A RIGHT JOIN PPFSTDTIMEHEAD B USING(LINE,PROCESS)
           --WHERE LINE=PAR_LINE AND B.MODELFAMILY='*';
        -- IF VAR_Flag > 0 THEN

            --SELECT NVL(MAX(TARGET),0) INTO VAR_TARGET FROM PPFSTANDARDPROD A RIGHT JOIN PPFSTDTIMEHEAD B USING(LINE,PROCESS)
           --WHERE LINE=PAR_LINE AND B.MODELFAMILY='*';
           
           
           --update by grey on 20190702
           /*IF PAR_MFGTYPE='PCB' THEN
             SELECT NVL(ROUND((60*60)/ MAX(CYCLETIME)),0) INTO VAR_TARGET FROM PPFSTDTIMEHEAD
             WHERE LINE=PAR_LINE AND UPN='*' AND MODELFAMILY='*' AND MATERIALGROUP='B';
           ELSE
             SELECT NVL(ROUND((60*60)/ MAX(CYCLETIME)),0) INTO VAR_TARGET FROM PPFSTDTIMEHEAD
             WHERE LINE=PAR_LINE AND UPN='*' AND MODELFAMILY='*' AND MATERIALGROUP='S';
           END IF;*/
             SELECT nvl(round(3600/max(b.cycletime)),0) INTO VAR_TARGET FROM SFCMIPCB139.SFCTRANSACTIONCACHE A,PPFSTDTIMEHEAD B
             WHERE a.TRNDATE BETWEEN PAR_STARTTIME AND PAR_ENDTIME AND a.LINE=PAR_LINE AND a.STAGE=PAR_STAGE AND A.UPN=B.UPN;
             
             
        -- ELSE
          --  VAR_TARGET :=0;
         --END IF;
     END IF;
      IF VAR_TARGET > 0 THEN
              SELECT STARTTIME,ENDTIME,BREAKTIME INTO VAR_PERIODSTARTTIME,VAR_PERIODENDTIME,VAR_BREAKTIME FROM V_PPFPRODPERIOD
              WHERE LINE=PAR_LINE AND SHIFT=PAR_SHIFT AND PERIODNO=PAR_PERIODNO;
                    SELECT
                     (PAR_ENDTIME - PAR_STARTTIME)*24*60/((VAR_PERIODENDTIME-VAR_PERIODSTARTTIME)*24*60) -
                      VAR_BREAKTIME*60/PAR_BREAKTIMEPER/((VAR_PERIODENDTIME-VAR_PERIODSTARTTIME)*24*60) *
                      (PAR_ENDTIME-PAR_STARTTIME)*24*60/((VAR_PERIODENDTIME-VAR_PERIODSTARTTIME)*24*60)
                      INTO VAR_PER
                     FROM DUAL;
              VAR_TARGET := ROUND(VAR_TARGET * VAR_PER);
      END IF;
   RETURN VAR_TARGET;
           EXCEPTION
        WHEN OTHERS THEN
           RETURN VAR_TARGET;
END;
