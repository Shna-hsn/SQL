CREATE OR REPLACE TRIGGER TRI_PPLULETOKBLINESTOPDETAIL
  AFTER INSERT OR UPDATE ON PPLULE
  FOR EACH ROW

DECLARE
  V_COUNT     NUMBER := 0;
  VAR_ERR_MSG VARCHAR2(2000);

BEGIN

  IF :NEW.CATEGORY <> 'No demand' THEN
    SELECT COUNT(*)
      INTO V_COUNT
      FROM KBLINESTOPDETAIL
     WHERE SEQUENCEID = :NEW.SEQID;
    IF V_COUNT = 0 THEN
      INSERT INTO KBLINESTOPDETAIL
        (SEQUENCEID,
         SYMPTION,
         DUTYDEPT,
         DUTYLEADER,
         APPLYDATETIME,
         DOWNTIMEFROM,
         ISSHUTDOWN,
         DOWNTIMETO,
         REPLAYTIME,
         STATUS,
         LINE)
      VALUES
        (:NEW.SEQID,
         :NEW.ISSUEDESC||','||:NEW.ROOTCAUSE,
         :NEW.FUNCTION,
         '',
         SYSDATE,
         TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.DOWNTIME || ':00','YYYYMMDD HH24:MI:SS'),
         'Y',
         TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.FIXTIME || ':00','YYYYMMDD HH24:MI:SS'),
         TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.FIXTIME || ':00','YYYYMMDD HH24:MI:SS'),
         'C',
         :NEW.LINE);
         ELSE
           UPDATE KBLINESTOPDETAIL SET
           DUTYDEPT = :NEW.FUNCTION,
           SYMPTION = :NEW.ISSUEDESC||','||:NEW.ROOTCAUSE,
           APPLYDATETIME = SYSDATE,
           DOWNTIMEFROM = TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.DOWNTIME || ':00','YYYYMMDD HH24:MI:SS'),
           DOWNTIMETO = TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.FIXTIME || ':00','YYYYMMDD HH24:MI:SS'),
           REPLAYTIME = TO_DATE(TO_CHAR(:NEW.TRNDATE,'YYYYMMDD') || :NEW.FIXTIME || ':00','YYYYMMDD HH24:MI:SS')
           WHERE LINE = :NEW.LINE AND SEQUENCEID = :NEW.SEQID;
    END IF;
  END IF;
  
EXCEPTION
  WHEN OTHERS THEN
    VAR_ERR_MSG := SQLERRM(SQLCODE);
    INSERT INTO KBNERRORLOG
    VALUES
      (SYSDATE,'TRI_PPLULETOKBLINESTOPDETAIL',VAR_ERR_MSG);
    ---RETURN;
END;