CREATE OR REPLACE TRIGGER TRI_ALSMSGTOKBLINESTOPDETAIL
  AFTER INSERT OR UPDATE ON ALSMSG
  FOR EACH ROW

DECLARE
  V_COUNT     NUMBER := 0;
  V_SEQID     VARCHAR2(20);
  V_REPLAYTIME    DATE;
  VAR_ERR_MSG VARCHAR2(2000);

BEGIN

  IF :NEW.TYPE = 'YR' AND :NEW.STATUS = 'Shutdown' AND :NEW.RESUMEDATE IS NULL THEN
    SELECT COUNT(*)
      INTO V_COUNT
      FROM SFCPP139.KBLINESTOPDETAIL
     WHERE SEQUENCEID = :NEW.EVENTID;
    IF V_COUNT = 0 THEN
      INSERT INTO SFCPP139.KBLINESTOPDETAIL
        (SEQUENCEID,
         SYMPTION,
         DUTYDEPT,
         DUTYLEADER,
         APPLYDATETIME,
         DOWNTIMEFROM,
         ISSHUTDOWN,
         DOWNTIMETO,
         REPLAYTIME,
         STATUS,
         LINE)
      VALUES
        (:NEW.EVENTID,
         :NEW.ERRORTYPE,
         '',
         '',
         SYSDATE,
         :NEW.EVENTTIME,
         'N',
         :NEW.RESUMEDATE,
         :NEW.RESUMEDATE,
         'C',
         :NEW.LINE);
    END IF;
  END IF;
  
  IF :NEW.TYPE = 'YR' AND :NEW.STATUS = 'Shutdown' AND :NEW.RESUMEDATE IS NOT NULL THEN
    SELECT COUNT(*)
      INTO V_COUNT
      FROM SFCPP139.KBLINESTOPDETAIL
     WHERE SEQUENCEID = :NEW.EVENTID;
    IF V_COUNT > 0 THEN
      UPDATE SFCPP139.KBLINESTOPDETAIL
         SET APPLYDATETIME = SYSDATE,
             ISSHUTDOWN    = 'Y',
             DOWNTIMETO    = :NEW.RESUMEDATE,
             REPLAYTIME    = :NEW.RESUMEDATE
       WHERE LINE = :NEW.LINE
         AND SEQUENCEID = :NEW.EVENTID;
    END IF;
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    VAR_ERR_MSG := SQLERRM(SQLCODE);
    INSERT INTO JOB_LOG
    VALUES
      ('TRI_ALSMSGTOKBLINESTOPDETAIL',VAR_ERR_MSG,SYSDATE);
    ---RETURN;
END;
